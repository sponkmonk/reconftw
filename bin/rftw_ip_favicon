#!/bin/bash

# Default config path
CONFIG_PATH="${RECONFTW_CFG}"

# Check if the config file exists
if [[ -f "${CONFIG_PATH}" ]]; then
    source "${CONFIG_PATH}"
else
    echo "Error: reconftw.cfg not found at ${CONFIG_PATH}!"
    exit 1
fi
# Help menu
display_help() {
	echo "$(basename "$0") [Options]"
	echo
	echo "  -d, --domain            Target for subdomain enumeration (Required)"
	echo "  -o, --output            Output file location"
	echo "  -h, --help              Display this help and exit"
	echo
	echo "Example: $0 -d example.com -l /path/to/log"
	exit 1
}

# Variables for input and output
output_file=""

# Parse input arguments
while [[ $# -gt 0 ]]; do
	case $1 in
	-d | --domain)
		DOMAIN="$2"
		shift
		;;
	-o | --output)
		output_file="$2"
		shift
		;;
	-h | --help) display_help ;;
	*)
		echo "Unknown parameter passed: $1"
		exit 1
		;;
	esac
	shift
done

# Input validation
if [[ -z ${DOMAIN} ]]; then
	echo "No input provided!"
	display_help
	exit 1
fi

# Validate domain
rftw_util_validatedomain "${DOMAIN}" || exit 1 # Domain validation


pushd "${tools}/fav-up" &>/dev/null || {
	echo "Failed to cd to ${tools}/fav-up in favicon"
	exit 1
}
python3 favUp.py -w "${DOMAIN}" -sc -o favicontest.json

if [[ -s "favicontest.json" ]]; then
	jq -r 'try .found_ips' favicontest.json >temp.txt
	grep -v "not-found" temp.txt >favicontest.txt
	rm temp.txt
	sed -i "s/|/\n/g" favicontest.txt
	mv favicontest.txt ${output_file}
fi

popd &>/dev/null || {
	echo "Failed to cd back from favicon"
	exit 1
}
[[ -s "${tools}/fav-up/favicontest.txt" ]] && cp "${tools}"/fav-up/favicontest.txt .
cat favicontest.txt
