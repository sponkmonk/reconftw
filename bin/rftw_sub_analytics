#!/bin/bash

# Default config path
CONFIG_PATH="${RECONFTW_CFG}"

# Check if the config file exists
if [[ -f "${CONFIG_PATH}" ]]; then
    source "${CONFIG_PATH}"
else
    echo "Error: reconftw.cfg not found at ${CONFIG_PATH}!"
    exit 1
fi

function usage() {
	echo "$(basename "$0") [-h] [-i INPUT_FILE] [-o OUTPUT_FILE]"
	echo "  -i INPUT_FILE     Specify the input file."
	echo "  -o OUTPUT_FILE    Specify the output file."
	echo "  -h                Display this help message."
	exit 1
}

# Parse input arguments
while [[ $# -gt 0 ]]; do
	case $1 in
	-f | --file)
		input_file="$2"
		shift
		;;
	-o | --output)
		output_file="$2"
		shift
		;;
	-h | --help) display_help ;;
	*)
		echo "Unknown parameter passed: $1"
		exit 1
		;;
	esac
	shift
done

function sub_analytics() {
	mkdir -p .tmp/ 2>/dev/null
	analyticsrelationships -ch <${input_file} >>.tmp/analytics_subs_tmp.txt
	[[ -s "${input_file}" ]] && cat .tmp/analytics_subs_tmp.txt | sed "s/|__ //" | anew -q .tmp/analytics_subs_clean.txt
	if [[ ${AXIOM} != true ]]; then
		rftw_util_resolver_quick_local
		[[ -s ".tmp/analytics_subs_clean.txt" ]] && puredns resolve .tmp/analytics_subs_clean.txt -w ${output_file} -r "${resolvers}" --resolvers-trusted "${resolvers_trusted}" -l "${PUREDNS_PUBLIC_LIMIT}" --rate-limit-trusted "${PUREDNS_TRUSTED_LIMIT}" --wildcard-tests "${PUREDNS_WILDCARDTEST_LIMIT}" --wildcard-batch "${PUREDNS_WILDCARDBATCH_LIMIT}" 2>/dev/null
	else
		rftw_util_resolver_quick_axiom
		[[ -s ".tmp/analytics_subs_clean.txt" ]] && axiom-scan .tmp/analytics_subs_clean.txt -m puredns-resolve -r /home/op/lists/resolvers.txt --resolvers-trusted /home/op/lists/resolvers_trusted.txt --wildcard-tests $PUREDNS_WILDCARDTEST_LIMIT --wildcard-batch $PUREDNS_WILDCARDBATCH_LIMIT -o ${output_file} "${AXIOM_EXTRA_ARGS}" 2>/dev/null
	fi
}

# Execute the function
sub_analytics
