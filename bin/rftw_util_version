#!/bin/bash

# Default config path
CONFIG_PATH="${RECONFTW_CFG}"

# Check if the config file exists
if [[ -f "${CONFIG_PATH}" ]]; then
    source "${CONFIG_PATH}"
else
    echo "Error: reconftw.cfg not found at ${CONFIG_PATH}!"
    exit 1
fi

# Help menu
function help_menu() {
	echo -e "Usage: ./check_version_script.sh"
	echo -e "Checks for updates to the current git repository."
	echo -e "Options:"
	echo -e "  -h, --help                Display this help menu"
	exit 1
}

# Main function
function check_version() {
	# Check if current directory is a git repository
	if ! git -C $HOME/.reconftw rev-parse --is-inside-work-tree >/dev/null 2>&1; then
		echo -e "${bred}Error: This is not a git repository.${reset}" >&2
		exit 1
	fi

	timeout 10 git fetch
	exit_status=$?
	if [[ ${exit_status} -eq 0 ]]; then
		BRANCH=$(git rev-parse --abbrev-ref HEAD)
		HEADHASH=$(git rev-parse HEAD)
		UPSTREAMHASH=$(git rev-parse "${BRANCH}"@\{upstream\})
		if [[ ${HEADHASH} != "${UPSTREAMHASH}" ]]; then
			echo -e "\n${yellow} There is a new version, run ./install.sh to get the latest version${reset}\n\n"
		fi
	else
		echo -e "\n${bred} Unable to check updates ${reset}\n\n" >&2
	fi
}

# Parse command-line arguments
while [[ $# -gt 0 ]]; do
	case $1 in
	-h | --help) help_menu ;;
	*)
		echo -e "${bred}Unknown parameter passed: $1${reset}" >&2
		help_menu
		;;
	esac
	shift
done

# Execute the main function
check_version
