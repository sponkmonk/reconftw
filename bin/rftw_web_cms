#!/bin/bash

# Default config path
CONFIG_PATH="${RECONFTW_CFG}"

# Check if the config file exists
if [[ -f "${CONFIG_PATH}" ]]; then
    source "${CONFIG_PATH}"
else
    echo "Error: reconftw.cfg not found at ${CONFIG_PATH}!"
    exit 1
fi

# Help menu
display_help() {
	echo "$(basename "$0") [Options]"
	echo
	echo "  -f, --file              File containing domains for web probing"
	echo "  -o, --output-dir        Output dir location"
	echo "  -h, --help              Display this help and exit"
	echo
	echo "Example: $0 -f input.txt -o output.txt"
	exit 1
}

# Parse input arguments
while [[ $# -gt 0 ]]; do
	case $1 in
	-f | --file)
		input_file="$2"
		shift
		;;
	-o | --output)
		output_dir="$2"
		shift
		;;
	-h | --help) display_help ;;
	*)
		echo "Unknown parameter passed: $1"
		exit 1
		;;
	esac
	shift
done

# Input validation
if [[ -z ${input_file} ]]; then
	display_help
	exit 1
fi

# Validate file
if [[ ! -f ${input_file} ]]; then
	echo "Error: Specified file does not exist or is not readable."
	exit 1
fi

mkdir -p .tmp 2>/dev/null

tr '\n' ',' <${input_file} >.tmp/cms.txt
timeout -k 1m ${CMSSCAN_TIMEOUT}s python3 "${tools}"/CMSeeK/cmseek.py -l .tmp/cms.txt --batch -r
exit_status=$?
if [[ $exit_status -eq 125 ]]; then
	echo "TIMEOUT cmseek.py - investigate manually for $dir"
	end_func "TIMEOUT cmseek.py - investigate manually for $dir" "cms_scanner"
	exit 1
elif [[ $exit_status -ne 0 ]]; then
	echo "ERROR cmseek.py - investigate manually for $dir"
	end_func "ERROR cmseek.py - investigate manually for $dir" "cms_scanner"
	exit 1
fi

while read -r sub; do
	sub_out=$(echo "$sub" | sed -e 's|^[^/]*//||' -e 's|/.*$||')
	cms_id=$(jq -r 'try .cms_id' "${tools}/CMSeeK/Result/${sub_out}/cms.json" 2>/dev/null)
	if [[ -z $cms_id ]]; then
		rm -rf "${tools}/CMSeeK/Result/${sub_out}"
	else
		mv -f "${tools}/CMSeeK/Result/${sub_out}" ${output_dir}/
	fi
done <${input_file}
