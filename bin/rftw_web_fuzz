#!/bin/bash

# Default config path
CONFIG_PATH="${RECONFTW_CFG}"

# Check if the config file exists
if [[ -f "${CONFIG_PATH}" ]]; then
    source "${CONFIG_PATH}"
else
    echo "Error: reconftw.cfg not found at ${CONFIG_PATH}!"
    exit 1
fi

# Help menu
display_help() {
	echo "$(basename "$0") [Options]"
	echo
	echo "  -f, --file              File containing domains for web probing"
	echo "  -o, --output-dir        Output dir location"
	echo "  -h, --help              Display this help and exit"
	echo
	echo "Example: $0 -f input.txt -o output.txt"
	exit 1
}

# Parse input arguments
while [[ $# -gt 0 ]]; do
	case $1 in
	-f | --file)
		input_file="$2"
		shift
		;;
	-o | --output)
		output_dir="$2"
		shift
		;;
	-h | --help) display_help ;;
	*)
		echo "Unknown parameter passed: $1"
		exit 1
		;;
	esac
	shift
done

# Input validation
if [[ -z ${input_file} ]]; then
	display_help
	exit 1
fi

# Validate file
if [[ ! -f ${input_file} ]]; then
	echo "Error: Specified file does not exist or is not readable."
	exit 1
fi


mkdir -p "${output_dir}" .tmp/fuzzing 2>/dev/null
if [[ ${AXIOM} != true ]]; then
	interlace -tL ${input_file} -threads "${INTERLACE_THREADS}" -c "ffuf ${FFUF_FLAGS} -t ${FFUF_THREADS} -rate ${FFUF_RATELIMIT} -H \"${HEADER}\" -w ${fuzz_wordlist} -maxtime ${FFUF_MAXTIME} -u _target_/FUZZ -o _output_/_cleantarget_.json" -o .tmp/fuzzing
	while read -r sub; do
		sub_out=$(echo "${sub}" | sed -e 's|^[^/]*//||' -e 's|/.*$||')
		if [[ -s ".tmp/fuzzing/${sub_out}.json" ]]; then
			jq -r 'try .results[] | "\(.status) \(.length) \(.url)"' <".tmp/fuzzing/${sub_out}.json" | sort -k1 | anew -q "${output_dir}/${sub_out}.txt"
		fi
	done <${input_file}
	sort -k1 < <(find "${output_dir}/" -type f -iname "*.txt" -exec cat {} +) | anew -q "${output_dir}/fuzzing_full.txt"
else
	axiom-exec "mkdir -p /home/op/lists/seclists/Discovery/Web-Content/" &>/dev/null
	axiom-exec "wget -q -O - ${fuzzing_remote_list} > /home/op/lists/fuzz_wordlist.txt" &>/dev/null
	axiom-exec "wget -q -O - ${fuzzing_remote_list} > /home/op/lists/seclists/Discovery/Web-Content/big.txt" &>/dev/null
	axiom-scan ${input_file} -m ffuf_base -H "${HEADER}" $FFUF_FLAGS -s -maxtime $FFUF_MAXTIME -o .tmp/ffuf-content.json "${AXIOM_EXTRA_ARGS}" 2>/dev/null
	while read -r sub; do
		sub_out=$(echo "$sub" | sed -e 's|^[^/]*//||' -e 's|/.*$||')
		if [[ -s ".tmp/ffuf-content.json" ]]; then
			grep "$sub" < <(jq -r 'try .results[] | "\(.status) \(.length) \(.url)"' .tmp/ffuf-content.json) | sort -k1 | anew -q fuzzing/${sub_out}.txt
		fi
	done <${input_file}
	sort -k1 < <(find "${output_dir}/" -type f -iname "*.txt" -exec cat {} +) | anew -q ${output_dir}/fuzzing_full.txt
fi