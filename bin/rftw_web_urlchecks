#!/bin/bash

# Default config path
CONFIG_PATH="${RECONFTW_CFG}"

# Check if the config file exists
if [[ -f "${CONFIG_PATH}" ]]; then
    source "${CONFIG_PATH}"
else
    echo "Error: reconftw.cfg not found at ${CONFIG_PATH}!"
    exit 1
fi

# Help menu
display_help() {
	echo "$(basename "$0") [Options]"
	echo
	echo "  -f, --file              File containing domains for web probing"
	echo "  -o, --output-dir        Output dir location"
	echo "  -h, --help              Display this help and exit"
	echo
	echo "Example: $0 -f input.txt -o output.txt"
	exit 1
}

# Parse input arguments
while [[ $# -gt 0 ]]; do
	case $1 in
	-f | --file)
		input_file="$2"
		shift
		;;
	-o | --output)
		output_dir="$2"
		shift
		;;
	-h | --help) display_help ;;
	*)
		echo "Unknown parameter passed: $1"
		exit 1
		;;
	esac
	shift
done

# Input validation
if [[ -z ${input_file} ]]; then
	display_help
	exit 1
fi

# Validate file
if [[ ! -f ${input_file} ]]; then
	echo "Error: Specified file does not exist or is not readable."
	exit 1
fi



# URL checks function
urlchecks() {
	mkdir -p ${output_dir} 2>/dev/null

	if [[ ! ${AXIOM} == true ]]; then
		if [[ $URL_CHECK_PASSIVE == true ]]; then
			if [[ $DEEP == true ]]; then
				cat ${input_file} | unfurl -u domains >${output_dir}/waymore_input.txt
				python3 ${tools}/waymore/waymore.py -i ${output_dir}/waymore_input.txt -mode U -f -oU ${output_dir}/url_extract_tmp.txt
			else
				cat ${input_file} | gau --threads $GAU_THREADS | anew -q ${output_dir}/url_extract_tmp.txt
			fi
			if [[ -s ${GITHUB_TOKENS} ]]; then
				github-endpoints -q -k -d "${DOMAIN}" -t ${GITHUB_TOKENS} -o ${output_dir}/github-endpoints.txt
				[[ -s "${output_dir}/github-endpoints.txt" ]] && cat ${output_dir}/github-endpoints.txt | anew -q ${output_dir}/url_extract_tmp.txt
			fi
		fi
		if [[ $URL_CHECK_ACTIVE == true ]]; then
			if [[ $DEEP == true ]]; then
				katana -silent -list ${input_file} -jc -kf all -c $KATANA_THREADS -d 3 -fs rdn -o ${output_dir}/katana.txt
			else
				katana -silent -list ${input_file} -jc -kf all -c $KATANA_THREADS -d 2 -fs rdn -o ${output_dir}/katana.txt
			fi
		fi
	else
		if [[ $URL_CHECK_PASSIVE == true ]]; then
			if [[ $DEEP == true ]]; then
				cat ${input_file} | unfurl -u domains >${output_dir}/waymore_input.txt
				axiom-scan ${output_dir}/waymore_input.txt -m waymore -o ${output_dir}/url_extract_tmp.txt "${AXIOM_EXTRA_ARGS}" 2>/dev/null
			else
				axiom-scan ${input_file} -m gau -o ${output_dir}/url_extract_tmp.txt "${AXIOM_EXTRA_ARGS}" 2>/dev/null
			fi
			if [[ -s ${GITHUB_TOKENS} ]]; then
				github-endpoints -q -k -d "${DOMAIN}" -t ${GITHUB_TOKENS} -o ${output_dir}/github-endpoints.txt
				[[ -s "${output_dir}/github-endpoints.txt" ]] && cat ${output_dir}/github-endpoints.txt | anew -q ${output_dir}/url_extract_tmp.txt
			fi
		fi

		if [[ $URL_CHECK_ACTIVE == true ]]; then
			if [[ $DEEP == true ]]; then
				axiom-scan ${input_file} -m katana -jc -kf all -d 3 -fs rdn -fs rdn -o ${output_dir}/katana.txt "${AXIOM_EXTRA_ARGS}" 2>/dev/null
			else
				axiom-scan ${input_file} -m katana -jc -kf all -d 2 -fs rdn -fs rdn -o ${output_dir}/katana.txt "${AXIOM_EXTRA_ARGS}" 2>/dev/null
			fi
		fi

	fi
	[[ -s "${output_dir}/katana.txt" ]] && sed -i '/^.\{2048\}./d' ${output_dir}/katana.txt
	[[ -s "${output_dir}/katana.txt" ]] && cat ${output_dir}/katana.txt | anew -q ${output_dir}/url_extract_tmp.txt
	[[ -s "${output_dir}/url_extract_tmp.txt" ]] && cat ${output_dir}/url_extract_tmp.txt | grep "${DOMAIN}" | grep -aEi "\.(js)" | anew -q ${output_dir}/url_extract_js.txt
	if [[ $DEEP == true ]]; then
		[[ -s "${output_dir}/url_extract_js.txt" ]] && interlace -tL ${output_dir}/url_extract_js.txt -threads 10 -c "python3"${tools}"/JSA/jsa.py -f target | anew -q ${output_dir}/url_extract_tmp.txt" &>/dev/null
	fi
	[[ -s "${output_dir}/url_extract_tmp.txt" ]] && cat ${output_dir}/url_extract_tmp.txt | grep "${DOMAIN}" | grep "=" | qsreplace -a | grep -aEiv "\.(eot|jpg|jpeg|gif|css|tif|tiff|png|ttf|otf|woff|woff2|ico|pdf|svg|txt|js)$" | anew -q ${output_dir}/url_extract_tmp2.txt
	[[ -s "${output_dir}/url_extract_tmp2.txt" ]] && cat ${output_dir}/url_extract_tmp2.txt | python3"${tools}"/urless/urless/urless.py | anew -q ${output_dir}/url_extract_uddup.txt


}

urlchecks
