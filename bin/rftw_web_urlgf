#!/bin/bash

# Default config path
CONFIG_PATH="${RECONFTW_CFG}"

# Check if the config file exists
if [[ -f "${CONFIG_PATH}" ]]; then
    source "${CONFIG_PATH}"
else
    echo "Error: reconftw.cfg not found at ${CONFIG_PATH}!"
    exit 1
fi

# Help menu
display_help() {
	echo "$(basename "$0") [Options]"
	echo
	echo "  -f, --file              File containing domains for web probing"
	echo "  -o, --output-dir        Output dir location"
	echo "  -h, --help              Display this help and exit"
	echo
	echo "Example: $0 -f input.txt -o output.txt"
	exit 1
}

# Parse input arguments
while [[ $# -gt 0 ]]; do
	case $1 in
	-f | --file)
		input_file="$2"
		shift
		;;
	-o | --output)
		output_dir="$2"
		shift
		;;
	-h | --help) display_help ;;
	*)
		echo "Unknown parameter passed: $1"
		exit 1
		;;
	esac
	shift
done

# Validate file
if [[ ! -f ${input_file} ]]; then
	echo "Error: Specified file does not exist or is not readable."
	exit 1
fi

# Vulnerable pattern search function
url_gf() {
	mkdir -p $output_dir
	if [[ -s $input_file ]]; then
		gf xss "$input_file" | anew -q ${output_dir}/xss.txt
		gf ssti "$input_file" | anew -q ${output_dir}/ssti.txt
		gf ssrf "$input_file" | anew -q ${output_dir}/ssrf.txt
		gf sqli "$input_file" | anew -q ${output_dir}/sqli.txt
		gf redirect "$input_file" | anew -q ${output_dir}/redirect.txt
		[[ -s "${output_dir}/ssrf.txt" ]] && cat ${output_dir}/ssrf.txt | anew -q ${output_dir}/redirect.txt
		gf rce "$input_file" | anew -q ${output_dir}/rce.txt
		gf potential "$input_file" | cut -d ':' -f3-5 | anew -q ${output_dir}/potential.txt
		[[ -s ".tmp/url_extract_tmp.txt" ]] && cat .tmp/url_extract_tmp.txt | grep -aEiv "\.(eot|jpg|jpeg|gif|css|tif|tiff|png|ttf|otf|woff|woff2|ico|pdf|svg|txt|js)$" | unfurl -u format %s://%d%p | anew -q ${output_dir}/endpoints.txt
		gf lfi "$input_file" | anew -q ${output_dir}/lfi.txt
	fi
}

url_gf
