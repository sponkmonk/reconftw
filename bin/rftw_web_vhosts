#!/bin/bash

# Default config path
CONFIG_PATH="${RECONFTW_CFG}"

# Check if the config file exists
if [[ -f "${CONFIG_PATH}" ]]; then
    source "${CONFIG_PATH}"
else
    echo "Error: reconftw.cfg not found at ${CONFIG_PATH}!"
    exit 1
fi
# Help menu
display_help() {
	echo "$(basename "$0") [Options]"
	echo
	echo "  -f, --file              File containing domains for fuzzing vhosts"
	echo "  -o, --output            Output file location"
	echo "  -h, --help              Display this help and exit"
	echo
	echo "Example: $0 -f input.txt -o output.txt"
	exit 1
}

# Parse input arguments
while [[ $# -gt 0 ]]; do
	case $1 in
	-f | --file)
		input_file="$2"
		shift
		;;
	-o | --output)
		output_dir="$2"
		shift
		;;
	-h | --help) display_help ;;
	*)
		echo "Unknown parameter passed: $1"
		exit 1
		;;
	esac
	shift
done

# Input validation
if [[ -z ${input_file} ]]; then
	display_help
	exit 1
fi

# Validate file
if [[ ! -f ${input_file} ]]; then
	echo "Error: Specified file does not exist or is not readable."
	exit 1
fi

run_vhosts() {
	mkdir -p "${output_dir}" .tmp/virtualhosts
    interlace -tL ${input_file} -threads "${INTERLACE_THREADS}" -c "ffuf -ac -t ${FFUF_THREADS} -rate ${FFUF_RATELIMIT} -H \"${HEADER}\" -H \"Host: FUZZ._cleantarget_\" -w ${fuzz_wordlist} -maxtime ${FFUF_MAXTIME} -u  _target_ -of json -o _output_/_cleantarget_.json" -o .tmp/virtualhosts 2>>"${LOGFILE}" >/dev/null
    for sub in $(cat ${input_file}); do
        sub_out=$(echo $sub | sed -e 's|^[^/]*//||' -e 's|/.*$||')
        [[ -s ".tmp/virtualhosts/${sub_out}.json" ]] && cat .tmp/virtualhosts/${sub_out}.json | jq -r 'try .results[] | "\(.status) \(.length) \(.url)"' | sort | anew -q ${output_dir}/${sub_out}.txt
    done
    find ${output_dir} -type f -iname "*.txt" -exec cat {} + 2>>"${LOGFILE}" | anew -q ${output_dir}/virtualhosts_full.txt
}

run_vhosts
